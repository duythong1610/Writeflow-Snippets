{
  "CRUD Modal Form": {
    "prefix": "crudmodal",
    "body": [
      "import { Modal, Form, Input, InputNumber, Select, DatePicker, Switch, Checkbox, Radio, Upload, Button, message } from 'antd';",
      "import { UploadOutlined } from '@ant-design/icons';",
      "import { useEffect } from 'react';",
      "",
      "interface ${1:CrudModalProps}<T> {",
      "  open: boolean;",
      "  mode: 'create' | 'edit';",
      "  initialValues?: Partial<T>;",
      "  onCancel: () => void;",
      "  onSubmit: (values: T) => Promise<void>;",
      "  loading?: boolean;",
      "  title?: string;",
      "  width?: number;",
      "}",
      "",
      "const ${2:CrudModal} = <T extends Record<string, any>>({",
      "  open,",
      "  mode,",
      "  initialValues,",
      "  onCancel,",
      "  onSubmit,",
      "  loading = false,",
      "  title,",
      "  width = 700",
      "}: ${1:CrudModalProps}<T>) => {",
      "  const [form] = Form.useForm<T>();",
      "",
      "  useEffect(() => {",
      "    if (open) {",
      "      if (mode === 'edit' && initialValues) {",
      "        form.setFieldsValue(initialValues);",
      "      } else {",
      "        form.resetFields();",
      "      }",
      "    }",
      "  }, [open, mode, initialValues, form]);",
      "",
      "  const handleFinish = async (values: T) => {",
      "    try {",
      "      await onSubmit(values);",
      "      form.resetFields();",
      "      message.success(`${mode === 'create' ? 'Created' : 'Updated'} successfully!`);",
      "    } catch (error) {",
      "      message.error(`${mode === 'create' ? 'Create' : 'Update'} failed!`);",
      "    }",
      "  };",
      "",
      "  const handleCancel = () => {",
      "    form.resetFields();",
      "    onCancel();",
      "  };",
      "",
      "  return (",
      "    <Modal",
      "      title={title || `${mode === 'create' ? 'Add New' : 'Edit'} ${3:Item}`} ",
      "      open={open}",
      "      onCancel={handleCancel}",
      "      onOk={() => form.submit()}",
      "      confirmLoading={loading}",
      "      width={width}",
      "      destroyOnClose",
      "    >",
      "      <Form",
      "        form={form}",
      "        layout=\"vertical\"",
      "        onFinish={handleFinish}",
      "        preserve={false}",
      "      >",
      "        {/* Input text */}",
      "        <Form.Item",
      "          name=\"name\"",
      "          label=\"Name\"",
      "          rules={[{ required: true, message: 'Please enter a name!' }]}",
      "        >",
      "          <Input placeholder=\"Enter name\" />",
      "        </Form.Item>",
      "",
      "        {/* Input number */}",
      "        <Form.Item",
      "          name=\"age\"",
      "          label=\"Age\"",
      "          rules={[{ type: 'number', min: 0, message: 'Invalid age' }]}",
      "        >",
      "          <InputNumber style={{ width: '100%' }} placeholder=\"Enter age\" />",
      "        </Form.Item>",
      "",
      "        {/* Select */}",
      "        <Form.Item",
      "          name=\"status\"",
      "          label=\"Status\"",
      "          rules={[{ required: true, message: 'Please select status!' }]}",
      "        >",
      "          <Select placeholder=\"Select status\">",
      "            <Select.Option value=\"active\">Active</Select.Option>",
      "            <Select.Option value=\"inactive\">Inactive</Select.Option>",
      "          </Select>",
      "        </Form.Item>",
      "",
      "        {/* Date */}",
      "        <Form.Item",
      "          name=\"date\"",
      "          label=\"Created Date\"",
      "          rules={[{ required: true, message: 'Please select date!' }]}",
      "        >",
      "          <DatePicker style={{ width: '100%' }} format=\"MM/DD/YYYY\" />",
      "        </Form.Item>",
      "",
      "        {/* Switch */}",
      "        <Form.Item name=\"isActive\" label=\"Active\" valuePropName=\"checked\">",
      "          <Switch />",
      "        </Form.Item>",
      "",
      "        {/* Checkbox */}",
      "        <Form.Item name=\"accept\" valuePropName=\"checked\">",
      "          <Checkbox>Accept terms</Checkbox>",
      "        </Form.Item>",
      "",
      "        {/* Radio */}",
      "        <Form.Item name=\"gender\" label=\"Gender\">",
      "          <Radio.Group>",
      "            <Radio value=\"male\">Male</Radio>",
      "            <Radio value=\"female\">Female</Radio>",
      "          </Radio.Group>",
      "        </Form.Item>",
      "",
      "        {/* Textarea */}",
      "        <Form.Item name=\"description\" label=\"Description\">",
      "          <Input.TextArea rows={4} placeholder=\"Enter description\" />",
      "        </Form.Item>",
      "",
      "        {/* Upload */}",
      "        <Form.Item name=\"file\" label=\"Upload\" valuePropName=\"fileList\" getValueFromEvent={e => Array.isArray(e) ? e : e && e.fileList}>",
      "          <Upload name=\"file\" action=\"/upload.do\" listType=\"text\">",
      "            <Button icon={<UploadOutlined />}>Choose file</Button>",
      "          </Upload>",
      "        </Form.Item>",
      "      </Form>",
      "    </Modal>",
      "  );",
      "};"
    ],
    "description": "CRUD Modal Form component"
  }
}
